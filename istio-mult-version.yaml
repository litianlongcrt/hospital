apiVersion: apps/v1
kind: Deployment
metadata:
  name: client
  labels:
    app: client
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: client
  template:
    metadata:
      labels:
        app: client
    spec:
      containers:
      - name: client
        image: nginx
        imagePullPolicy: IfNotPresent
---
apiVersion: v1
kind: Service
metadata:
  name: web
  labels:
    app: web
spec:
  ports:
  - port: 80
    name: http
  selector:
    app: web
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-v1
  labels:
    app: web
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web
      version: v1
  template:
    metadata:
      labels:
        app: web
        version: v1
    spec:
      containers:
      - name: httpd
        image: httpd
        imagePullPolicy: IfNotPresent
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-v2
  labels:
    app: web
    version: v2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web
      version: v2
  template:
    metadata:
      labels:
        app: web
        version: v2
    spec:
      containers:
      - name: nginx
        image: nginx
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "echo nginx > /usr/share/nginx/html/index.html"]
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: web-dr
spec:
  host: web
  subsets:
  - name: v1
    labels:
      version: v1
    trafficPolicy:
      loadBalancer:
        simple: ROUND_ROBIN
  - name: v2
    labels:
      version: v2
    trafficPolicy:
      loadBalancer:
        simple: ROUND_ROBIN
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: web-vs
spec:
  hosts:
  - web
  http:
  - match:
    - headers:
        version:
          exact: "v2"
    route:
    - destination:
        host: web
        subset: v2
  - match:
    - headers:
        version:
          exact: "v1"
    route:
    - destination:
        host: web
        subset: v1
  - route:
    - destination:
        host: web
        subset: v1
      weight: 50
    - destination:
        host: web
        subset: v2
      weight: 50
      
# v1 为 生产版本 v2 为新版本
# 默认 header头调用v1版本，如果需要，通过前端传给后端v2版本，来验证v2版本
# 如果只想测试v2新版本，则配置header version:v2
# 如果只想测试v1老版本，则配置header version:v1
# 如果两个版本共存，则默认访问比例为 1:1，这时候，不需要添加header头，前期可以修改版本比例为: 100:0，等v2版本验证通过后，再调整为 50:50
